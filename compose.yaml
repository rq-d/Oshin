services:
  node:
    image: ros2-mavros-ardupilot:latest
    network_mode: host
    command: bash -c "echo "holiiii" && ros2 launch ardupilot_sitl sitl_dds_udp.launch.py transport:=udp4 synthetic_clock:=True wipe:=False model:=quad speedup:=1 slave:=0 instance:=0 defaults:=$(ros2 pkg prefix ardupilot_sitl)/share/ardupilot_sitl/config/default_params/copter.parm,$(ros2 pkg prefix ardupilot_sitl)/share/ardupilot_sitl/config/default_params/dds_udp.parm sim_address:=127.0.0.1 master:=tcp:127.0.0.1:5760 sitl:=127.0.0.1:5501"
    tty: true

# start Ardupilot SITL
# cd ~/ardupilot && ./Tools/autotest/sim_vehicle.py -v ArduCopter -f gazebo-iris --console --map
# ros2 launch ardupilot_sitl sitl_dds_udp.launch.py transport:=udp4 synthetic_clock:=True wipe:=False model:=quad speedup:=1 slave:=0 instance:=0 defaults:=$(ros2 pkg prefix ardupilot_sitl)/share/ardupilot_sitl/config/default_params/copter.parm,$(ros2 pkg prefix ardupilot_sitl)/share/ardupilot_sitl/config/default_params/dds_udp.parm sim_address:=127.0.0.1 master:=tcp:127.0.0.1:5760 sitl:=127.0.0.1:5501"

# start Mavros
# source ~/ros2_ws/install/setup.bash
# ros2 launch mavros px4.launch fcu_url:=udp://127.0.0.1:14550



  # gzweb:
  #   image: vasilescur/gzweb-rosssh
  #   tty: true
  #   ports:
  #     - 8080:8080

# Usage
# First, do:
# docker pull vasilescur/gzweb-rosssh
# Then, run with:
# docker run -t -d -p 8080:8080 gzweb-rosssh
# Use your browser to access the running web interface at localhost:8080.
# Building
# To build the image, run:
# docker build -t vasilescur/gzweb-rosssh .

