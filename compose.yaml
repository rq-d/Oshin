services:
  oshin:
    image: ardunode:latest
    # network_mode: host
    command: bash -c "echo "hola_mundo!" && cd /root/ardu_ws/ && colcon build --packages-up-to ardupilot_sitl && source install/setup.bash && ros2 launch ardupilot_sitl sitl_dds_udp.launch.py transport:=udp4 synthetic_clock:=True wipe:=False model:=quad speedup:=1 slave:=0 instance:=0 defaults:=$(ros2 pkg prefix ardupilot_sitl)/share/ardupilot_sitl/config/default_params/copter.parm,$(ros2 pkg prefix ardupilot_sitl)/share/ardupilot_sitl/config/default_params/dds_udp.parm sim_address:=127.0.0.1 master:=tcp:127.0.0.1:5760 sitl:=127.0.0.1:5501"
    tty: true
  
  oshin2:
    image: ardunode:latest
    # network_mode: host
    command: bash -c "cd /root/ardu_ws/ && colcon build --packages-up-to ardupilot_sitl && tail -f /dev/null"
    tty: true


  # gzweb:
  #   image: vasilescur/gzweb-rosssh
  #   tty: true
  #   ports:
  #     - 8080:8080

# Usage
# First, do:
# docker pull vasilescur/gzweb-rosssh
# Then, run with:
# docker run -t -d -p 8080:8080 gzweb-rosssh
# Use your browser to access the running web interface at localhost:8080.
# Building
# To build the image, run:
# docker build -t vasilescur/gzweb-rosssh .

